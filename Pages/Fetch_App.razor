@page "/fetchapp"

@using BlazorSupervisionRBI.Data
@inject OverviewService OverviewService
@inject DetailsNodeService DetailsNodeService
@inject DysfunctionalHardwareService DysfunctionalHardwareService

@if (overviewSymantec == null || overviewVeeam == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="accordion" style="width:500px" id="accordionNode">
        @foreach (var item in overviewNode)
        {
            <div class="accordion-item">
                <h2 class="accordion-header" id="header@(item.severity)">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                data-bs-target="#collapse@(item.severity)" aria-expanded="false"
                aria-controls="collapse@(item.severity)">
                        @item.countSeverity node(s) in @statusLayout[item.severity][0] state
                    </button>
                </h2>
                <div id="collapse@(item.severity)" class="accordion-collapse collapse" aria-labelledby="header@(item.severity)"
            data-bs-parent="#accordionNode">
                    <div class="accordion-body">
                        <table class="table table-striped" style="width:100%,padding:0px;">
                            <thead>
                                <tr>
                                    <th>Node Name</th>
                                    <th>Customer Code</th>
                                    <th>CS Code</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var detail in detailsNodeBySeverity[item.severity])
                                {
                                    <tr>
                                        <td>@detail.nodeName</td>
                                        <td>@detail.codeClient</td>
                                        <td>@detail.codeCS</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-inline-block">
        <ul class="list-group list-group">
            @foreach (var item in hardwareInfoByNode)
            {
                <li class="list-group-item list-group-item-primary">Hardware alert on @item[1] : <em>@item[2]</em></li>
                <li class="list-group-item" style ="text-align:center">@foreach (var category in categoryByHardwareInfo[(int)@item[0]])
                    {
                        @category <span>&nbsp</span>}</li>
            }
        </ul>
    </div>

    <div class="accordion-item">
        <h2 class="accordion-header" id="header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse"
            aria-expanded="false" aria-controls="#collapse">
            </button>
        </h2>
        <div class="accordion-collapse collapse" id="collapse" aria-labelledby="header" data-bs-parent="#accordionHardware">
            <div class="accordion-body">

            </div>
        </div>
    </div>

    <table>
        <tr>
            <th colspan=@overviewSymantec.Count>Symantec</th>
        </tr>
        <tr>
            @foreach (var item in overviewSymantec)
            {
                <td>
                    <div class="card" style="width: 18rem;">
                        <img src="ressources/@(item.severity).png" class="card-img-top" alt="...">
                        <div class="card-body">
                            <h5 class="card-title">@item.countSeverity application(s)</h5>
                            <a href="#" class="btn btn-primary">Details</a>
                        </div>
                    </div>
                </td>
            }
        </tr>
        <tr>
            <th colspan=@overviewVeeam.Count>Veeam</th>
        </tr>
        <tr>
            @foreach (var item in overviewVeeam)
            {
                <td>
                    <div class="card" style="width: 18rem;">
                        <img src="ressources/@(item.severity).png" class="card-img-top" alt="...">
                        <div class="card-body">
                            <h5 class="card-title">@item.countSeverity application(s)</h5>
                            <a href="#" class="btn btn-primary">Details</a>
                        </div>
                    </div>
                </td>
            }
        </tr>
    </table>
}

@code {
    private List<Overview> overviewSymantec;
    private List<Overview> overviewVeeam;
    private List<Overview> overviewNode;
    private Dictionary<int, List<string>> statusLayout = new Dictionary<int, List<string>>(){
{0,new List<string>{"unknown","lighblue"}},
{2,new List<string>{"down","tomato"}},
{3,new List<string>{"warning","gold"}},
{12, new List<string>{"unreachable","mediumblue"}},
{14, new List<string>{"critical","red"}},
{27, new List<string>{"disabled","grey"}}
};
    private Dictionary<int, List<DetailsNode>> detailsNodeBySeverity = new Dictionary<int, List<DetailsNode>>();
    private Dictionary<int, List<string>> categoryByHardwareInfo = new Dictionary<int, List<string>>();
    List<List<object>> hardwareInfoByNode = new List<List<object>>();
    protected override async Task OnInitializedAsync()
    {
        overviewSymantec = await OverviewService.GetAppBySeverityAsync("Symantec");
        overviewVeeam = await OverviewService.GetAppBySeverityAsync("Veeam");
        overviewNode = await OverviewService.GetNodeBySeverityAsync();

        foreach (var item in overviewNode)
        {
            List<DetailsNode> singleDetailList = await DetailsNodeService.GetDetailsNodeAsync(item.severity);
            detailsNodeBySeverity.Add(item.severity, singleDetailList);
        }

        foreach (var item in await DysfunctionalHardwareService.GetDysfunctionalHardwareAsync())
        {
            if (categoryByHardwareInfo.ContainsKey(item.hardwareInfoID))
            {
                categoryByHardwareInfo[item.hardwareInfoID].Add(item.categoryName);
            }
            else
            {
                categoryByHardwareInfo.Add(item.hardwareInfoID, new List<string>() { item.categoryName });
                hardwareInfoByNode.Add(new List<object>() { item.hardwareInfoID, item.nodeName, item.alertMessage });
            }
        }


        StateHasChanged();
    }
}